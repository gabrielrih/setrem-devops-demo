name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DEV_TAG: devops-demo-app:dev
  LATEST_TAG: devops-demo-app:latest

permissions:
  contents: read

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    name: Run lint and unit tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements/common.txt ]; then pip install -r requirements/common.txt; fi
          if [ -f requirements/dev.txt ]; then pip install -r requirements/dev.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Unit tests
        run: |
          pytest test/unit
  integration_test:
    runs-on: ubuntu-latest
    name: Run integration tests and code coverage
    steps:
      - uses: actions/checkout@v3
      - name: Run integration tests
        run: |
          docker compose -f ./docker/compose-test.yml up --build --abort-on-container-exit
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  security_scan:
    runs-on: ubuntu-latest
    name: Security scan
    needs: [code_coverage]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements/common.txt ]; then pip install -r requirements/common.txt; fi
          if [ -f requirements/dev.txt ]; then pip install -r requirements/dev.txt; fi
      - name: Vulnerability scan on common packages
        run: |
          safety check -r requirements/common.txt
      - name: Vulnerability scan on dev packages
        run: |
          safety check -r requirements/dev.txt
      # FIX IT
      # The coverage in 0%
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build_image:
    runs-on: ubuntu-latest
    name: Build and push docker image
    needs: [unit_tests, security_scan]
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # FIX IT:
      # The build and push is not working
      # - name: Build and push image to Docker Hub
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./docker/
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.LATEST_TAG }}
  